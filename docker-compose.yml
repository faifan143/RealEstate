version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: realestate-postgres
    environment:
      POSTGRES_DB: RealEstateDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # Optional: Add init scripts directory
      # - ./init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - realestate-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d RealEstateDb"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # .NET API Application
  api:
    build:
      context: .
      dockerfile: src/RealEstate.API/Dockerfile
    container_name: realestate-api
    ports:
      - "5269:8080"  # Fixed port mapping
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=RealEstateDb;Username=postgres;Password=123;Pooling=true;Connection Lifetime=0;
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      # Add these if you need HTTPS
      # - ASPNETCORE_HTTPS_PORT=8081
      # - ASPNETCORE_Kestrel__Certificates__Default__Password=yourpassword
      # - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - realestate-network
    volumes:
      # Mount volume for uploaded images/files
      - api-uploads:/app/wwwroot/images
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Shared volumes
volumes:
  postgres-data:
    name: realestate-postgres-data
  api-uploads:
    name: realestate-api-uploads

# Shared networks
networks:
  realestate-network:
    name: realestate-network
    driver: bridge